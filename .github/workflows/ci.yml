name: CI

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:

permissions:
  actions: read
  contents: write
  checks: write
  pull-requests: write

jobs:
  sonarqube-entity:
    name: SonarQube - Entity
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: libs/entity
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_ENTITY }}

  sonarqube-migration:
    name: SonarQube - Migration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: libs/migration
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_MIGRATION }}

  sonarqube-server:
    name: SonarQube - Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: apps/server
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SERVER }}

  sonarqube-cli:
    name: SonarQube - Cli
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: apps/micro_url
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_CLI }}

  sonarqube-frontend:
    name: SonarQube - Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: js/frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}

  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      checks: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"
          cache: "pnpm"

      - name: Install rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install js packages
        run: pnpm install --frozen-lockfile

      - name: Restore NX cache
        id: cache-nx-restore
        uses: actions/cache/restore@v4
        with:
          path: .nx/cache
          key: ${{ runner.os }}-nx

      - name: Test changed files
        run: pnpm exec nx affected --base=origin/main --head=HEAD -t test

      - name: Build changed files
        run: pnpm exec nx affected --base=origin/main --head=HEAD -t build

      - name: Save NX cache
        id: cache-nx-save
        uses: actions/cache/save@v4
        with:
          path: .nx/cache
          key: ${{ steps.cache-nx-restore.outputs.cache-primary-key }}
