name: CI - Server

on:
  push:
    branches:
      - main
    paths:
      - apps/server/**
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
    paths:
      - apps/server/**
  workflow_dispatch:

permissions:
  actions: read
  contents: write
  checks: write
  pull-requests: write

jobs:
  sonarqube-server:
    name: SonarQube - Server
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        with:
          projectBaseDir: apps/server
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_SERVER }}

  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          cache-key: ${{ runner.os }}-${{ matrix.toolchain }}

      - name: Build
        run: cargo build --package server --verbose

      - name: Test
        run: cargo test --package server --verbose

  lint:
    name: Lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy,rustfmt
          cache-key: ${{ runner.os }}-${{ matrix.toolchain }}

      - name: Run cargo checks
        run: cargo check --package server --verbose

      - name: Run clippy
        run: cargo clippy --package server --verbose -- -D warnings
